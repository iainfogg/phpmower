# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    useRealMotor: true
    useRealSensor: true

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    IainFogg\MotorControl\:
        resource: '../modules/MotorControl/src/*'
        exclude: '../modules/MotorControl/src/{Entity,Migrations,Tests,Kernel.php}'

    IainFogg\MotorControl\SteeringController:
#        arguments:
#            $leftMotor: '@IainFogg\MotorControl\Motor\SimulatedMotor'
#            $rightMotor: '@IainFogg\MotorControl\Motor\SimulatedMotor'
        factory: ['IainFogg\MotorControl\SteeringController', factory]
        arguments: ['%useRealMotor%', '@Calcinai\PHPi\Board\V3\BPlus']

    IainFogg\MotorControl\SensorController:
#        arguments:
#            $frontBumperSensor: '@IainFogg\MotorControl\BumperSensor\SimulatedBumperSensor'
        factory: ['IainFogg\MotorControl\SensorController', factory]
        arguments: ['%useRealSensor%', '@Symfony\Component\EventDispatcher\EventDispatcherInterface', '@Calcinai\PHPi\Board\V3\BPlus']

    IainFogg\MotorControl\MowerController:
        arguments:
            $loop: '@React\EventLoop\StreamSelectLoop'
            $board: '@Calcinai\PHPi\Board\V1\A'

    React\EventLoop\StreamSelectLoop:

    Calcinai\PHPi\Board\V3\BPlus:
        arguments:
            $loop: '@React\EventLoop\StreamSelectLoop'

    Calcinai\PHPi\Board\V1\A:
        arguments:
            $loop: '@React\EventLoop\StreamSelectLoop'
